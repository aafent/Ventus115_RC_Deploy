! ***********************************************************************
! ***** REPORT      : elhmer.sqr                                     ****
! ***** DATE WRITTEN: 07/08/98                 LAST UPDATE: 07/08/98 ****
! ***** APPLICATION : ΓΕΝΙΚΗ ΛΟΓΙΣΤΙΚΗ                               ****
! ***** AUTHOR      : adr                                            ****
! ***** NOTE        : --- ΗΜΕΡΟΛΟΓΙΟ ΟΜΑΔΑΣ    ---                   ****
! ***********************************************************************

#DEFINE   PAGE-Y                 65
#DEFINE   PAGE-X                160 
#DEFINE   HEAD-SIZE               7
#DEFINE   FOOT-SIZE               1
#DEFINE   HEAD-LINE               4

#DEFINE   DATEMASK         DD/MM/YY
#DEFINE   MASK1              000000
#DEFINE   MASK19             999999
#DEFINE   MASK2      99999999999.99c
#DEFINE   MASK20     99999999999.9Bc
#DEFINE   MASK3        999999999.99c

#DEFINE	  dp_prev	1
#DEFINE	  ta_prev       2
#DEFINE	  dp_total	3
#DEFINE	  ta_total	4
#DEFINE	  dp_date_total	5
#DEFINE	  ta_date_total	6


Begin-Setup
 ASK    $L_GDATA   'GDATA '
 #INCLUDE "{$L_GDATA}/sqr/SETUP01.inc"

 CREATE-ARRAY NAME=totals
  	      SIZE= 7 
              FIELD=xre:number=0
	      FIELD=pis:number=0

! dim1 : DP previus totals
! dim2 : TA previus totals
! dim3 : DP totals
! dim4 : TA totals
! dim5 : DP date totals
! dim6 : TA date totals

End-Setup


Begin-Report
 #INCLUDE "{$L_GDATA}/sqr/REPORT01.inc"

 input $apohmnia  'Από Ημερομηνία  : '
 input $evshmnia  'Eως Ημερομηνία  : '

 input $omhm      'Ομαδα Ημερολογ. : '
 unstring $omhm by '"' into $filler1 $omada $filler1

 execute app_datecnv   $apohmnia, $apohm output, $apohmpr output
 execute app_datecnv   $evshmnia, $evshm output, $evshmpr output

 move 0 to #maxarr
 move $L_CID to $cid

 do init
 do loadall
 do main

End-Report

! ****************************************************************************
begin-procedure init

begin-select -C1
xrhsh		() NOP
convert(datetime, xrhsh_arxh)	&xrhsh_arxh () NOP
	move &xrhsh      to #xrhsh
        move &xrhsh_arxh to $datestart
from ap_xrhsh
where cid = $cid
  and $apohm between xrhsh_arxh and xrhsh_telos
end-select


end-procedure

! ****************************************************************************

begin-procedure main


move 'F' to $pageflag
move 0 to #ln

begin-select -C1
convert(datetime,a.hmer_e) &a.hmer_e () 	on-break print=never
                                     		before=hmerbreak save=$hmer level=1
                                     		after =totalbreak 
a.mhxar                     () NOP
	if &a.mhxar > 0 
		print &a.mhxar (,01,06) edit {MASK1}
	else
		print &a.mhxar (,01,06) edit {MASK19}
	end-if
a.parid                     (,+1,10)
a.kat                       () NOP
a.logar                     () NOP
   do  makelogform($cid, #xrhsh, &a.logar, $logarpr, &a.kat, $flag_tam)
   print $logarpr           (,+1,14)
b.perigrafh                 (,+1,25) 
a.aitia                     (,+1,30)
a.xrevsh		    () NOP
a.pistvsh		    () NOP

   do printxp(&a.xrevsh,&a.pistvsh,$flag_tam,'T')
   next-listing need=3

   let #ln = #ln + 1
   if #ln > 45
       do changepage('TO','TO','FROM','FROM')
       move 0 to #ln
   end-if

from  gl_kin a, gl_logar b, gl_hmerandomada ss
where a.cid=$cid
and   a.logar=b.logar
and   a.logar not like '9%'
and   a.cid=b.cid
and   a.hmer_e between $apohm and $evshm
and   a.hmerologio = ss.hmerologio
and   ss.omada = $omada 
and   ss.cid = a.cid
and   ss.cid = b.cid
! (v) 28.9.94 Nick - Ισχυει μονο για το θεωρημενο
and   a.mhxar is not null
[$SQLCMD]
order by a.hmer_e,a.mhxar,a.parid
end-select

next-listing

do print_line
do print_totals('DATE','FINAL')
do print_totals('GEN','FINAL')
do print_totals('TOTALDAY','FINAL')
do print_line

end-procedure

! ****************************************************************************

begin-procedure printxp(#xrevsh,#pistvsh,$flag_tam,$flag_add)

!display 'ENTER IN PRINTXP = ' noline
!display #xrevsh noline
!display ' , ' noline
!display #pistvsh noline
!display ' '

 
   position ( , 87 )
   if $flag_tam = 'T'
	position (,+31)
   	print #xrevsh	    (,+1,14)	edit {MASK20}
	print #pistvsh      (,+1,14)	edit {MASK20}
   else
   	print #xrevsh	    (,+1,14)	edit {MASK20}
	print #pistvsh      (,+1,14)	edit {MASK20}
   end-if

   if $flag_add = 'T'
      do addtotals(#xrevsh,#pistvsh,$flag_tam)
   end-if

   if $flag_tam = 'T' 
      get #xre #pis from totals({ta_total}) xre pis
      let #tmp = #xre - #pis
      print #tmp    (,+1,12)	edit {MASK3}
   end-if

end-procedure


! ****************************************************************************

begin-procedure  addtotals(#xrevsh,#pistvsh,$flag_tam)

 if $flag_tam = 'T'
     array-add #xrevsh #pistvsh to totals({ta_total}) xre pis
     array-add #xrevsh #pistvsh to totals({ta_date_total}) xre pis
 else
     array-add #xrevsh #pistvsh to totals({dp_total}) xre pis
     array-add #xrevsh #pistvsh to totals({dp_date_total}) xre pis
 end-if

end-procedure

! ****************************************************************************

begin-procedure totalbreak


end-procedure

! ****************************************************************************

begin-procedure print_line

 print $L_X2  (,1,{PAGE-X}) fill

end-procedure

! ****************************************************************************

begin-procedure changepage($t1,$t2,$t3,$t4)
	
	next-listing
	do print_line
	do print_totals('DATE',$t1)
	do print_totals('GEN',$t2)
	if $t1='FINAL'
		do print_totals('TOTALDAY',$t1)
	end-if
	do print_line
	new-page
        if $t1 <> 'NO'
	   do print_totals('DATE',$t3)
        end-if
	do print_totals('GEN',$t4)
        next-listing

end-procedure


! ****************************************************************************

begin-procedure hmerbreak
  
  if $pageflag='T' 
     do changepage('FINAL','TO','NO','FROM')
     move 0 to #ln
  else 
     next-listing
  end-if
  !adr next-listing
  print 'Ημερομηνία : '  (1) center
  print &a.hmer_e        (,+2) edit {DATEMASK}
  next-listing
  next-listing
  move 'T' to $pageflag

  put 0 0 into totals({dp_date_total}) xre pis
  put 0 0 into totals({ta_date_total}) xre pis

end-procedure

! ****************************************************************************

begin-procedure print_totals($tot_type,$tot_subtype)

  move 0 to #ta_type
  move 0 to #dp_type
  move 'F' to $flag_dayend
  EVALUATE  $tot_type
      WHEN  = 'DATE'
	    move 'ΗΜΕΡΗΣΙΑ ΣΥΝΟΛΑ ' to $msg
	    move {dp_date_total} to #dp_type
            move {ta_date_total} to #ta_type
            break
      WHEN  = 'TOTALDAY'
	    move ' ' to $msg
	    move {dp_date_total} to #dp_type
            move {ta_date_total} to #ta_type
            move 'T' to $flag_dayend
            break

      WHEN  = 'GEN'
	    move 'ΓΕΝΙΚΑ ΣΥΝΟΛΑ   ' to $msg
	    move {dp_total} to #dp_type
            move {ta_total} to #ta_type
            break
  END-EVALUATE

  EVALUATE  $tot_subtype
      WHEN  = 'TO'
	    let $msg=$msg || 'ΣΕ  ΜΕΤΑΦΟΡΑ :'
            break
      WHEN  = 'FROM'
	    let $msg=$msg || 'ΑΠΟ ΜΕΤΑΦΟΡΑ :'
            break
      WHEN  = 'FINAL'
	    let $msg=$msg || ':'
	    let $flag_dayend=$flag_dayend||'T'
            break
  END-EVALUATE

  print $msg   (,1)

  if $flag_dayend='TT'

     get #xre #pis from totals(#dp_type) xre pis
     get #txre #tpis from totals(#ta_type) xre pis
     let #xre = #xre + #txre
     let #pis = #pis + #tpis
     do printxp(#xre,#pis,'F','F')

  else

     get #xre #pis from totals(#dp_type) xre pis
     do printxp(#xre,#pis,'F','F')

     get #xre #pis from totals(#ta_type) xre pis
     do printxp(#xre,#pis,'T','F')

  end-if

  next-listing

end-procedure

! ****************************************************************************

begin-procedure makelogform($cid, #xrhsh, $inlogar, :$outlogar, $kat,:$flag_tam)
  
  move 'F' to $flag_tam

  execute -C2 glp_logfrm @cid       = $cid,
                         @xrhsh     = #xrhsh, 
                         @in_logar  = $inlogar, 
                         @out_logar = $outlogar output
begin-select -C2
'T'   &dum1  () NOP
     move &dum1 to $flag_tam
from ap_katasthma
where cid=$cid
  and kat=$kat
  and log_tam=$inlogar
end-select


end-procedure


! ****************************************************************************



begin-procedure loadall

begin-select
dateadd(dd,-1,$apohm) &evshmeromhnia
end-select

begin-select 
a.hmerologio          () NOP
a.seira               () NOP
c.perigrafh           () NOP

  let #inx=&a.seira

  if &a.seira>#maxarr
     move &a.seira to #maxarr
  end-if

from  gl_hmerandomada a, gl_hmerologia c
where a.cid=$cid
and   a.hmerologio=c.kvdikos
and   a.cid=c.cid
! (v) 1.9.94 Nick
and   a.omada = $omada 
end-select


  execute do=loadall2 glp_hmomadatot 
          @hmer_apo=$datestart, @hmer_evs=&evshmeromhnia, 
          @omada=$omada
     into &hmerologio    char(03),
          &perigrafh     char(30),
          &xrevsh        float,
          &pistvsh       float,
          &seira         int

end-procedure

begin-procedure loadall2

   move &seira to #inx

   let #tmp=#tmp+&xrevsh
   let #tmp=#tmp+&pistvsh
   

end-procedure 

! ****************************************************************************

Begin-Footing {FOOT-SIZE}
! #INCLUDE "{$L_GDATA}/sqr/FOOT01.inc"
End-Footing

Begin-Heading {HEAD-SIZE}
 print $select12cpi (,1) code
 #INCLUDE "{$L_GDATA}/sqr/HEAD03.inc"

! print 'ΠΡΟΧΕΙΡΟ ΗΜΕΡΟΛΟΓΙΟ ΔΙΑΦΟΡΩΝ ΠΡΑΞΕΩΝ & ΤΑΜΕΙΟΥ' (2,+1) center

! let $msg='ΠΕΡΙΟΔΟΥ '||$apohmpr||' - '||$evshmpr

!   print $msg (3,+1) center

   print 'Αυτ/τη'          (5,01,06)
   print 'Παραστατικό'      (,+1,11)
   print ' Λογαριασμός'     (,+0,14)
   print 'Περιγραφή'        (,+1,25) 
   print 'Αιτιολογία'       (,+1,30)

   position ( , 87 )
   print '       ΔΙΑΦΟΡΕΣ ΠΡΑΞΕΙΣ     '  (,+1,28)
   print '              ΤΑΜΕΙΟ        '  (,+0,28)


   
   print 'αρ/σή'           (6,01,06)
   position (6, 87 )
   print '        Χρέωση'  (,+1,14)
   print '       Πίστωση'  (,+1,14)
   print '        Χρέωση'  (,+0,14)
   print '       Πίστωση'  (,+1,14)
   print   '    Υπόλοιπο'  (,+0,12)

End-Heading


!<pcalib>
!Warning DO NOT modify this lines, are used internaly from PCA*LIBs
!	REP{GL	1	10	550	elhmer	rs	X	01},TITLE{Ημερολόγιο  Ταμείου & Διαφόρων Πράξεων}
!	PARCOUNT{2}
!	PAR1{Ημερομηνίες	DUMP1	2	ΑΠΟ-ΕΩΣ	datetime		X}
!	PAR2{Ομάδα Ημερολογίου	DUMP2	1	ΕΠΙΛΟΓΗ	varchar(4)		X}
!REPORTHELP{T},RNHELP{Πρόχειρο Ημερολόγιο - Θέλει Διόρθωση βάσει του Θεωρημένου},RNDESC{Θεωρημένη έκδοση : 550, (Ελαιουργικής)},RNVER{1},RNCREDT{1998-08-31},
!</pcalib>

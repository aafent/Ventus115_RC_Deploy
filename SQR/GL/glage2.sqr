!***********************************************************************
!***** REPORT      : glage1.sqr                                     ****
!***** DATE        : 27/08/99                                       ****
!***** APPLICATION : ΓΕΝΙΚΗ ΛΟΓΙΣΤΙΚΗ                               ****
!***** NOTE        : --- Ανάλυση υπολοίπου ---        		    ****
!***********************************************************************

#DEFINE   PAGE-Y                64
#DEFINE   PAGE-X               132
#DEFINE   HEAD-SIZE              8
#DEFINE   FOOT-SIZE              3
#DEFINE   HEAD-LINE              4

#DEFINE   MASK1A        99999999.99c
#DEFINE   MASK2         9999

Begin-Setup
 ASK    $L_GDATA   'GDATA '
 #INCLUDE "{$L_GDATA}/sqr/SETUP01.inc"

End-Setup

Begin-Report

 #INCLUDE "{$L_GDATA}/sqr/REPORT01.inc"
 move $L_CID to $cid

 input $evshmnia        'Eως Ημερομηνία  : '
 input $ikat            'Υποκατάστημα    : '
 input $pvlhths         'Πωλητής         : '
 input $flag_logarsynal '1=Λογ,2=Συναλ: '

 input $orio1           'Orio 1 : '
 input $orio2           'Orio 2 : '
 input $orio3           'Orio 3 : '
 input $orio4           'Orio 4 : '

 ! execute app_datecnv $apohmnia, $apohm output, $apohmpr output
 execute app_datecnv $evshmnia, $evshm output, $evshmpr output
 unstring $ikat by '"' into $filler $kat $filler
 unstring $pvlhths by '"' into $filler $pvlhths $filler
 unstring $flag_logarsynal by '"' into $filler $flag_logarsynal $filler
 
 unstring $orio1 by '"' into $filler $orio1 $filler
 unstring $orio2 by '"' into $filler $orio2 $filler
 unstring $orio3 by '"' into $filler $orio3 $filler
 unstring $orio4 by '"' into $filler $orio4 $filler

 if $kat = '*'
    let $kat = '%'
 end-if

 if $flag_logarsynal = '1' 
    move 'L' to $flag_logarsynal
 else
    move 'S' to $flag_logarsynal
 end-if

 move $orio1 to #orio1
 move $orio2 to #orio2
 move $orio3 to #orio3
 move $orio4 to #orio4

 do pca_printcover		! sqr/sqr/pcafun1.inc
 do main
 
End-Report

#INCLUDE "{$L_GDATA}/sqr/pcafun1.inc"
! ****************************************************************************

begin-procedure main

begin-select -C1
convert(datetime,'01/01/'+datepart(yy,$evshm),112) &apohm () NOP
    move &apohm to $apohm
end-select

next-listing

move 0 to #tot_tz_xre
move 0 to #tot_tz_pis
move 0 to #tot_ajia1
move 0 to #tot_ajia2
move 0 to #tot_ajia3
move 0 to #tot_ajia4
move 0 to #tot_ajia5
move 0 to #tot_ypol
move 0 to #tot_pis_ypol


if $flag_logarsynal = 'S'
   do main_by_synal
else
if $flag_logarsynal = 'L'
   do pca_replace($SQLCMD,$SQLCMD,'a.','a1.')
   display 'NEW SQLCMD IS : ' noline
   display $SQLCMD
   do main_by_logar
end-if
end-if


next-listing need=3

 print '#'                    (,1,8)
 print 'Σ Υ Ν Ο Λ Α'          (,+1,20)
 print #tot_tz_xre            (,+1,11) edit {MASK1A}
 print #tot_tz_pis            (,+1,11) edit {MASK1A}
 print #tot_ypol              (,+1,11) edit {MASK1A}
 print ' '                    (,+1,4)  edit {MASK2}
 print #tot_ajia1             (,+1,11) edit {MASK1A}
 print #tot_ajia2             (,+1,11) edit {MASK1A}
 print #tot_ajia3             (,+1,11) edit {MASK1A}
 print #tot_ajia4             (,+1,11) edit {MASK1A}
 print #tot_ajia5             (,+1,11) edit {MASK1A}
 next-listing
 print '#'                      (,1,8)
 print ' '                    (,+1,20)
 print ' '                    (,+1,11) 
 print ' '                    (,+1,11) 
 print #tot_pis_ypol          (,+1,11) edit {MASK1A}
 next-listing
 let #tmp = #tot_ypol + #tot_pis_ypol
 print '#'                      (,1,8)
 print ' '                    (,+1,20)
 print ' '                    (,+1,11) 
 print ' '                    (,+1,11) 
 print #tmp                   (,+1,11) edit {MASK1A}
 
 

end-procedure

! ****************************************************************************

begin-procedure main_by_logar

move 'T' to $flag_new_pvlhths
begin-select -C1
a1.logar           () NOP
a1.perigrafh       () NOP
b1.xrhsh 	   () NOP
b1.xrhsh_arxh	   () NOP
null  &c1.synal	   () NOP

   move &c1.synal      to $synal
   move &a1.logar      to $logar
   move &b1.xrhsh_arxh to $xrhsh_arxh
   move &b1.xrhsh      to #xrhsh

   move 'T' to $do_print_flag


   if $do_print_flag = 'T'
      do makelogform($cid, #xrhsh, $logar, $logarpr)
      do get_logar_tzir($cid, $logar, $xrhsh_arxh, $evshm, #tz_xre, #tz_pis, #cnt)
      move $logar        to $print_code
      move &a1.perigrafh to $print_txt
      do printdetails
   end-if

from  gl_logar a1, ap_xrhsh b1
where a1.cid=$cid
and   b1.cid=$cid
and   a1.cid=b1.cid
and   a1.xrhsh=b1.xrhsh
and   $apohm between b1.xrhsh_arxh and b1.xrhsh_telos
and   exists (select 1 from gl_ypol c1 where a1.cid=c1.cid and a1.logar=c1.logar 
                 and c1.hmeromhnia between b1.xrhsh_arxh and $evshm )
and   a1.post_flag is not null
[$SQLCMD]
order by a1.perigrafh
end-select

end-procedure


! ****************************************************************************


begin-procedure main_by_synal

move 'T' to $flag_new_pvlhths
begin-select -C1
a.logar           () NOP
a.perigrafh       () NOP
b.xrhsh		  () NOP
b.xrhsh_arxh	  () NOP
c.synal  	  () NOP
d.epvnymia	  () NOP

   move &c.synal      to $synal
   move &a.logar      to $logar
   move &b.xrhsh_arxh to $xrhsh_arxh
   move &b.xrhsh      to #xrhsh
   if $pvlhths='*' 
	move 'T' to $do_print_flag
        move 'F' to $flag_new_pvlhths
   else
	do checkpvlhths($cid,$logar,$pvlhths,$synal,$do_print_flag)
   end-if

   if $synal = '' 
      move 'F' to $do_print_flag
    end-if

   if $do_print_flag = 'T'
      if $flag_new_pvlhths = 'T'
        do print_pvlhths_info($pvlhths)
      end-if
      move 'F' to $flag_new_pvlhths
      do makelogform($cid, #xrhsh, $logar, $logarpr)
      do get_synal_tzir($cid, $logar, $synal, $xrhsh_arxh, $evshm, #tz_xre, #tz_pis, #cnt)
      move $synal      to $print_code
      move &d.epvnymia to $print_txt
      do printdetails
   end-if

from  gl_logar a, ap_xrhsh b, sy_synaleidos c, sy_synal d
where a.cid=$cid
and   b.cid=$cid
and   a.cid=b.cid
and   a.xrhsh=b.xrhsh
and   substring(a.logar,1,2) in ('33','53','30','50')
and   $apohm between b.xrhsh_arxh and b.xrhsh_telos
and   exists (select 1 from gl_ypol c where a.cid=c.cid and a.logar=c.logar 
                 and c.hmeromhnia between b.xrhsh_arxh and $evshm )
and   a.post_flag is not null
and   c.cid=$cid
and   c.cid=a.cid
and   c.cid=b.cid
and   c.logar = a.logar
and   c.eidos = 'PELAT-ES'
and   c.synal = d.synal
[$SQLCMD]
order by d.epvnymia
end-select

end-procedure



! ****************************************************************************

begin-procedure checkpvlhths($cid,$logar,$pvlhths,$synal,:$flag)
  move 'F' to $flag
  if $synal > '' 
     do checkpvlhths2($synal,$pvlhths,$flag)
  end-if

!display 'LOGAR:' noline
!display $logar noline
!display ' SYNAL:' noline
!display $synal noline
!display ' ' noline
!display $flag

end-procedure

begin-procedure checkpvlhths2($synal,$pvlhths,:$flag)
  move 'F' to $flag
begin-select
synal &synal () NOP
	 move 'T' to $flag
from sy_info
where synal=$synal
  and info_id = 7
  and info_data = $pvlhths
end-select
end-procedure

! ****************************************************************************

begin-procedure print_pvlhths_info($pvlhths)

move '(ΑΓΝΩΣΤΟΣ)' to $pvlhths_txt
begin-select
a.perigrafh      () nop

    move &a.perigrafh to $pvlhths_txt

from sy_pvlhtes a
where a.kvdikos = convert(int,$pvlhths)
end-select

print 'Πωλητής : '      (,10)
print $pvlhths          (,+1)
print $pvlhths_txt      (,+1)

next-listing
next-listing


end-procedure

! ****************************************************************************

begin-procedure makelogform($cid, #xrhsh, $inlogar, :$outlogar)

  execute -C2 glp_logfrm @cid       = $cid, 
              	         @xrhsh     = #xrhsh, 
                         @in_logar  = $inlogar, 
                         @out_logar = $outlogar output
end-procedure

! ****************************************************************************

begin-procedure printdetails

display 'LOGAR : ' noline
display $logar noline
display  ' SYNAL :>' noline
display  $synal noline
display '<'

execute -C2 glp_openypol1
		@FE       = 'SQR',
		@cid      = $cid,
		@synal    = $synal,
		@logar    = $logar,
		@hm_apo   = $xrhsh_arxh,
 		@hm_evs   = $evshm,
 		@orio1    = #orio1,
 		@ajia1    = #ajia1  output,
		@orio2    = #orio2,
		@ajia2    = #ajia2  output,
		@orio3    = #orio3,
		@ajia3    = #ajia3  output,
		@orio4    = #orio4,
		@ajia4    = #ajia4  output,
		@ajia5    = #ajia5  output,
		@ypol     = #ypol   output


 print $print_code        (,1,8)
 print $print_txt         (,+1,20)

 print #tz_xre            (,+1,11) edit {MASK1A}
 print #tz_pis            (,+1,11) edit {MASK1A}


 let #tmp=#tz_xre - #tz_pis
 if #ypol <> #tmp
    move '?' to $tmp
 else
    move ' ' to $tmp
 end-if

 if (#tmp < 0) and (#ypol=0) 
    move  ' ' to $tmp
    print #tmp            (,+1,11) edit {MASK1A}
    add #tmp     to #tot_pis_ypol
 else
    print #ypol           (,+1,11) edit {MASK1A}
    add #ypol    to #tot_ypol
 end-if
 print $tmp               (, ,1)
 print #cnt               (, ,4)  edit {MASK2}

 print #ajia1             (,+1,11) edit {MASK1A}
 print #ajia2             (,+1,11) edit {MASK1A}
 print #ajia3             (,+1,11) edit {MASK1A}
 print #ajia4             (,+1,11) edit {MASK1A}
 print #ajia5             (,+1,11) edit {MASK1A}
 
 
 next-listing

 add #tz_xre  to #tot_tz_xre
 add #tz_pis  to #tot_tz_pis


 add #ajia1   to #tot_ajia1
 add #ajia2   to #tot_ajia2
 add #ajia3   to #tot_ajia3
 add #ajia4   to #tot_ajia4
 add #ajia5   to #tot_ajia5


end-procedure printdetails

! ****************************************************************************

begin-procedure get_synal_tzir ($cid, $logar, $synal, $hmapo, $hmevs, :#xrevsh, :#pistvsh, :#cnt)

move 0 to #xrevsh
move 0 to #pistvsh
move 0 to #cnt

begin-select -C2
sum(a.xrevsh)       &xrevsh    () NOP
sum(a.pistvsh)      &pistvsh   () NOP
count(a.aa)         &cnt       () NOP

  move  &xrevsh   to #xrevsh
  move  &pistvsh  to #pistvsh
  move  &cnt      to #cnt

from   gl_kin a
where  a.cid=$cid
and    a.logar=$logar
and    a.synal=$synal
and    a.hmer_e between $hmapo and $hmevs
end-select

end-procedure

! ****************************************************************************

begin-procedure get_logar_tzir ($cid, $logar, $hmapo, $hmevs, :#xrevsh, :#pistvsh, :#cnt)

move 0 to #xrevsh
move 0 to #pistvsh
move 0 to #cnt

begin-select -C2
sum(a.xrevsh)       &xrevsh    () NOP
sum(a.pistvsh)      &pistvsh   () NOP
count(a.aa)         &cnt       () NOP

  move  &xrevsh   to #xrevsh
  move  &pistvsh  to #pistvsh
  move  &cnt      to #cnt

from   gl_kin a
where  a.cid=$cid
and    a.logar=$logar
and    a.hmer_e between $hmapo and $hmevs
end-select

end-procedure

! ****************************************************************************
begin-procedure mkoriohead(#apo,#evs,#apoincr,:$txt)
 
 if #evs = -1
    move '=' to $o3
    move '>' to $o2
 else
    move #evs to $o3 999
    let $o3=rtrim(ltrim($o3,' '),' ')
    move '-' to $o2
 end-if

 let #apo = #apo + #apoincr

 move #apo to $o1 999
 let $o1=rtrim(ltrim($o1,' '),' ')


 let $txt= '=='||$o1||$o2||$o3||'=='

end-procedure

! ****************************************************************************

Begin-Footing {FOOT-SIZE}
 #INCLUDE "{$L_GDATA}/sqr/FOOT01.inc"   ! pos: 1 
! print $L_X2			(3,01,{PAGE-X})	fill
End-Footing

Begin-Heading {HEAD-SIZE}

   move 6 to #HEAD_END_LINE
   #INCLUDE "{$L_GDATA}/sqr/HEAD01.inc"  

   print 'ΑΝΑΛΥΣΗ ΧΡΕΩΣΤΙΚΩΝ ΥΠΟΛΟΙΠΩΝ' (2,01) center
   let $msg = '( με ημερομηνία : ' || $evshmpr || ' )'
   print $msg (3,01) center

 print 'ΚΩΔΙΚΟΣ'             (5,1,8)
 print 'ΕΠΩΝΥΜΙΑ'           (,+1,20)

 print '     ΧΡΕΩΣΗ'        (,+1,11) 
 print '    ΠΙΣΤΩΣΗ'        (,+1,11) 
 print '   ΥΠΟΛΟΙΠΟ'        (,+1,11) 
 print ' '                  (,+1,4)  

 do mkoriohead(0,#orio1,0,$msg)
 print $msg        (,+1,11)

 do mkoriohead(#orio1,#orio2,1,$msg)
 print $msg        (,+1,11)

 do mkoriohead(#orio2,#orio3,1,$msg)
 print $msg        (,+1,11)

 do mkoriohead(#orio3,#orio4,1,$msg)
 print $msg        (,+1,11)

 do mkoriohead(#orio4, -1 ,1,$msg)
 print $msg        (,+1,11)

End-Heading
!<pcalib help>
! Αυτή είναι μιά δοκιμαστική γραμμή βοήθειας
!</pcalib help>

!<pcalib>
!Warning DO NOT modify this lines, are used internaly from PCA*LIBs
!	REP{GL	4	2	5153	glage2	rs	X	01},TITLE{Ανάλυση Χρεωστικού Υπολοίπου}
!	PARCOUNT{10}
!	PAR1{Ημερομηνία	HMER	2	ΑΠΟ-ΕΩΣ	datetime		X}
!	PAR2{Λογαριασμός	a.logar	2	BETWEEN	char(25)		}
!	PAR3{Υποκατάστημα	YPOK	1	*/ΕΠΙΛΟΓΗ	char(02)		X}
!	PAR4{Για τον Πωλητη	PVL	1	*/ΕΠΙΛΟΓΗ	varchar(20)		X}
!	PAR5{Λογαριασμός	a.logar	1	LIKE	char(25)	Χ	}
!	PAR6{1=Λογ/σμός, 2=Συναλλ	FLAGSL	1	ΕΠΙΛΟΓΗ	varchar(10)		X}
!	PAR7{α.0 εώς ημέρες	HMER1	1	ΕΠΙΛΟΓΗ	int		X}
!	PAR8{β. (α) εώς ημέρες	HMER2	1	ΕΠΙΛΟΓΗ	int		X}
!	PAR9{γ. (β) εώς ημέρες	HMER3	1	ΕΠΙΛΟΓΗ	int		X}
!	PAR10{δ. (γ) εώς ημέρες	HMER4	1	ΕΠΙΛΟΓΗ	int		X}
!REPORTHELP{F}
!</pcalib>

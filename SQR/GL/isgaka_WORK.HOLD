!***********************************************************************
!***** REPORT      : isgaka.sqr                                     ****
!***** DATE        : 7/3/01                                         ****
!***** APPLICATION : ΓΕΝΙΚΗ ΛΟΓΙΣΤΙΚΗ                               ****
!***** NOTE        : --- ΙΣΟΖΥΓΙΑ ΛΟΓΑΡΙΑΣΜΩΝ ΓΕΝ.ΛΟΓ.  ---         ****
!***********************************************************************

#DEFINE   PAGE-Y                62
#DEFINE   PAGE-X               202    ! htan 180  me logar_perigrafh 24
#DEFINE   HEAD-SIZE              8
#DEFINE   FOOT-SIZE              1
#DEFINE   HEAD-LINE              5

#DEFINE   DATEMASK        DD/MM/YY
#DEFINE   MASK1     999,999,999.99c
#DEFINE   MASK11    99999999999.99c
#DEFINE   MASK2                999

Begin-Setup
 ASK    $L_GDATA   'GDATA '
 #INCLUDE "{$L_GDATA}/sqr/SETUP01.inc"

 create-array name=   total_arr size=20 field=total_xre:number
                                        field=total_pis:number
 create-array name=pretotal_arr size=20 field=total_xre:number
                                        field=total_pis:number

 create-array name=ypototal_arr size=20 field=total_xre:number
                                        field=total_pis:number
End-Setup

Begin-Report
 #INCLUDE "{$L_GDATA}/sqr/REPORT01.inc"

 input $flag_ueor      'Θεωρημένο       : '
 input $iisoz     'Ισοζύγιο        : '
 input $apohmnia  'Από Ημερομηνία  : '
 input $evshmnia  'Eως Ημερομηνία  : '
 input $apolevel  'Απο Βαθμό       : '
 input $evslevel  'Εώς Βαθμό       : '

 execute app_floatcnv  $iisoz,    #isoz output
 execute app_datecnv   $apohmnia, $apohm output, $apohmpr output
 execute app_datecnv   $evshmnia, $evshm output, $evshmpr output

 execute app_floatcnv  $apolevel, #apolevel output
 execute app_floatcnv  $evslevel, #evslevel output

 unstring $flag_ueor by '"' into $filler $flag_ueor $filler
 if $flag_ueor = 'n' or $flag_ueor='N' or $flag_ueor='ν' or $flag_ueor='Ν'
    move 'Y' to $flag_ueor
 else
    move 'N' to $flag_ueor
 end-if

 move '1 jan 1999' to $datestart
 move $L_CID to $cid


 do init
 move &xrhsh_arxh to $datestart
 do main

End-Report

! ****************************************************************************
begin-procedure init
begin-select -C1
xrhsh				() NOP
convert(datetime, xrhsh_arxh)	&xrhsh_arxh 	() NOP
convert(datetime, xrhsh_telos)	&xrhsh_telos	() NOP
	move &xrhsh	    to #xrhsh
    	move &xrhsh_arxh    to $xrhsh_arxh  
    	move &xrhsh_telos   to $xrhsh_telos
from ap_xrhsh
where cid = $cid
and $apohm between xrhsh_arxh and xrhsh_telos
end-select
end-procedure
! ****************************************************************************

begin-procedure main

 move 0 to #maxinx

begin-select -C1
a.baumos             (,1) on-break print=never ! after=levelbreak 
a.logar             ()     NOP
a.frm_logar         ()     NOP
a.perigrafh         ()     NOP
a.post_flag         ()     NOP

      display &a.logar
      do getrest(#isoz, &a.logar,$datestart,$apohm,$evshm,#xrevsh,#pistvsh,#pre_xrevsh,#pre_pistvsh)
      let #pre2_xrevsh  = #pre_xrevsh  - #xrevsh
      let #pre2_pistvsh = #pre_pistvsh - #pistvsh

      move 'T' to $print_flag

      if #xrevsh     = 0 and
         #pistvsh    = 0 and
         #pre_xrevsh = 0 and
         #pre_pistvsh= 0
         move 'F' to $print_flag
      end-if

      if $print_flag = 'T'
         if &a.post_flag != 'X'
            next-listing
         end-if 

         move &a.frm_logar to $logarpr
         !do makelogform(&a.logar,$logarpr) // comment out by adr 16/4/2003


         print $logarpr        (, 1,15)
         print &a.perigrafh    (,+1,50)

         print #pre2_xrevsh    (,+1,14)  edit {MASK1}
         print #pre2_pistvsh   (,+1,14)  edit {MASK1}
	 let #dif = #pre2_xrevsh - #pre2_pistvsh
	 print #dif            (,+1,14)  edit {MASK1}

         print #xrevsh         (,+1,14)  edit {MASK1}
         print #pistvsh        (,+1,14)  edit {MASK1}
         print #pre_xrevsh     (,+1,14)  edit {MASK1}
         print #pre_pistvsh    (,+1,14)  edit {MASK1}
      end-if

      move &a.baumos to #inx

      let #diff=#pre_xrevsh-#pre_pistvsh

      if #diff > 0
         if $print_flag = 'T'
            print #diff        (,+1,14)  edit {MASK1}
            position (,+14)
         end-if
         get #tmp from ypototal_arr(#inx) total_xre
         let #tmp=#tmp+#diff
         put #tmp into ypototal_arr(#inx) total_xre
      else
         let #diff=#diff * (-1)
         if $print_flag = 'T'
            position (,+15)
            print #diff        (,+1,14)  edit {MASK1}
         end-if
         get #tmp from ypototal_arr(#inx) total_pis
         let #tmp=#tmp+#diff
         put #tmp into ypototal_arr(#inx) total_pis
      end-if

      get #tmp from total_arr(#inx) total_xre
      let #tmp=#tmp+#xrevsh
      put #tmp into total_arr(#inx) total_xre

      get #tmp from total_arr(#inx) total_pis
      let #tmp=#tmp+#pistvsh
      put #tmp into total_arr(#inx) total_pis

      get #tmp from pretotal_arr(#inx) total_xre
      let #tmp=#tmp+#pre_xrevsh
      put #tmp into pretotal_arr(#inx) total_xre

      get #tmp from pretotal_arr(#inx) total_pis
      let #tmp=#tmp+#pre_pistvsh
      put #tmp into pretotal_arr(#inx) total_pis

      if #maxinx < #inx
         move #inx to #maxinx
      end-if

      if $print_flag = 'T'
         next-listing
      end-if

from  gl_logar a
where a.cid    = $cid
and   a.xrhsh  = #xrhsh
and   a.baumos between #apolevel and #evslevel
[$SQLCMD]
order by a.logar, a.baumos
end-select

 next-listing need=4

 move 0 to #inx
 while #inx <= #maxinx
  let #inx=#inx+1

  get #xrevsh  from total_arr(#inx) total_xre
  get #pistvsh from total_arr(#inx) total_pis
  get #pre_xrevsh  from pretotal_arr(#inx) total_xre
  get #pre_pistvsh from pretotal_arr(#inx) total_pis
  get #ypo_xrevsh  from ypototal_arr(#inx) total_xre
  get #ypo_pistvsh from ypototal_arr(#inx) total_pis

  if #inx>#maxinx
     break
  end-if

   let #pre2_xrevsh  = #pre_xrevsh  - #xrevsh
   let #pre2_pistvsh = #pre_pistvsh - #pistvsh

   print 'ΣΥΝΟΛΑ ΒΑΘΜΟΥ : '  (, 1,15)
   print #inx                (,+0, 3)  edit {MASK2}
   print ' '                 (,+0,48)

   print #pre2_xrevsh 	 (,+1,14)  edit {MASK11}
   print #pre2_pistvsh   (,+1,14)  edit {MASK11}

   let #dif = #pre2_xrevsh - #pre2_pistvsh
   print #dif   (,+1,14)  edit {MASK11}

   print #xrevsh         (,+1,14)  edit {MASK11}
   print #pistvsh        (,+1,14)  edit {MASK11}
   print #pre_xrevsh     (,+1,14)  edit {MASK11}
   print #pre_pistvsh    (,+1,14)  edit {MASK11}
   print #ypo_xrevsh     (,+1,14)  edit {MASK11}
   print #ypo_pistvsh    (,+1,14)  edit {MASK11}

   next-listing


 end-while

end-procedure

! ****************************************************************************

begin-procedure levelbreak

!  next-listing 

end-procedure

! ****************************************************************************

!begin-procedure makelogform($inlogar,:$outlogar)
!  execute -C2 glp_logfrm @in_logar=$inlogar, @out_logar=$outlogar output
!end-procedure

! ****************************************************************************

begin-procedure getrest (#isoz, $logar,$datestart,$apohm,$evshm,:#xrevsh,:#pistvsh,:#pre_xrevsh,:#pre_pistvsh)

! Σε αυτή τη μορφή ισοζυγίου υπάρχουν οι στήλες προοδευτικά που έχουν από έναρξη χρήσης μέχρι απο ημερομηνια-1
! και περιόδου που περιέχει την από έως την έωσ ημερομηνία.
! Τα ακόλουθα procedures μαζεύουν για τα προοδευτικά από την έναρξη χρήσης μέχρι την έως και στη συνέχεια
! το function που έχει καλέσει την getrest αφαιρεί από τα προοδευτικά την περίοδο.

if #isoz = 1
  execute -C2 glp_getypol  @logar=$logar,
                      @hmer_apo=$apohm,
                      @hmer_evs=$evshm,
                      @xrevsh  =#xrevsh  output,
                      @pistvsh =#pistvsh output,
                      @diafora =#diafora output,
		      @isoz    = 3

  execute -C2  glp_getypol @logar=$logar,
                      @hmer_apo=$datestart,
                      @hmer_evs=$evshm,
                      @xrevsh  =#pre_xrevsh  output,
                      @pistvsh =#pre_pistvsh output,
                      @diafora =#pre_diafora output,
		      @isoz    = 3
end-if


if #isoz = 2

  execute -C2 glp_getypol  @logar=$logar,
                      @hmer_apo=$apohm,
                      @hmer_evs=$evshm,
                      @xrevsh  =#xrevsh  output,
                      @pistvsh =#pistvsh output,
                      @diafora =#diafora output,
		      @isoz    = 3

  execute -C2 glp_getypol  @logar=$logar,
                      @hmer_apo=$datestart,
                      @hmer_evs=$evshm,
                      @xrevsh  =#pre_xrevsh  output,
                      @pistvsh =#pre_pistvsh output,
                      @diafora =#pre_diafora output!,
!		      @isoz    = null
end-if

if #isoz = 3
  execute -C2 glp_getypol @logar=$logar,
                      @hmer_apo=$apohm,
                      @hmer_evs=$evshm,
                      @xrevsh  =#xrevsh  output,
                      @pistvsh =#pistvsh output,
                      @diafora =#diafora output!,
		      @isoz	= 1

  execute -C2 glp_getypol @logar=$logar,
                      @hmer_apo=$datestart,
                      @hmer_evs=$evshm,
                      @xrevsh  =#pre_xrevsh  output,
                      @pistvsh =#pre_pistvsh output,
                      @diafora =#pre_diafora output!,
		      !@isoz    = 1

end-if

if #isoz = 4
  execute -C2 glp_getypol @logar=$logar,
                      @hmer_apo=$apohm,
                      @hmer_evs=$evshm,
                      @xrevsh  =#xrevsh  output,
                      @pistvsh =#pistvsh output,
                      @diafora =#diafora output!,
		      @isoz	= 4

  execute -C2 glp_getypol @logar=$logar,
                      @hmer_apo=$datestart,
                      @hmer_evs=$evshm,
                      @xrevsh  =#pre_xrevsh  output,
                      @pistvsh =#pre_pistvsh output,
                      @diafora =#pre_diafora output!,
		      @isoz    = 4

end-if


if #isoz = 9
  execute -C2 glp_getypol @logar=$logar,
                      @hmer_apo=$apohm,
                      @hmer_evs=$evshm,
                      @xrevsh  =#xrevsh  output,
                      @pistvsh =#pistvsh output,
                      @diafora =#diafora output!,
		      !@isoz	= 1

  execute -C2 glp_getypol @logar=$logar,
                      @hmer_apo=$datestart,
                      @hmer_evs=$evshm,
                      @xrevsh  =#pre_xrevsh  output,
                      @pistvsh =#pre_pistvsh output,
                      @diafora =#pre_diafora output!,
		     ! @isoz    = 1

end-if

end-procedure

! ****************************************************************************

Begin-Footing {FOOT-SIZE}
 !#INCLUDE "{$L_GDATA}/sqr/FOOT01.inc"
End-Footing

Begin-Heading {HEAD-SIZE}
 if $flag_ueor = 'N'
 #INCLUDE "{$L_GDATA}/sqr/HEAD01.inc"
 else
 #INCLUDE "{$L_GDATA}/sqr/HEAD03.inc"
 end-if

 if $flag_ueor = 'N'
 if #isoz = 1
 print '(1) ΙΣΟΖΥΓΙΟ ΕΓΓΡΑΦΩΝ ΙΣΟΛΟΓΙΣΜΟΥ ΕΝΑΡΞΗΣ Γ.Λ.' (3,+1) center
 else
 if #isoz = 2
 print '(2) ΙΣΟΖΥΓΙΟ ΕΓΓΡΑΦΩΝ ΙΣΟΛΟΓΙΣΜΟΥ ΕΝΑΡΞΗΣ/ΛΗΞΗΣ Γ.Λ.' (3,+1) center
 else
 if #isoz = 3
 print '(3) ΙΣΟΖΥΓΙΟ ΛΟΓΑΡΙΑΣΜΩΝ ΛΟΓΙΣΤΙΚΗΣ' (3,+1) center
 else
 if #isoz = 4
 print '(4) ΙΣΟΖΥΓΙΟ ΕΓΓΡΑΦΩΝ ΛΗΞΗΣ' (3,+1) center
 else
 if #isoz = 9
 print '(9) ΓΕΝΙΚΟ ΙΣΟΖΥΓΙΟ ΛΟΓΙΣΤΙΚΗΣ' (3,+1) center
 else

 print 'ΣΚΟΥΠΙΔΙΑ ΣΚΟΥΠΙΔΙΑ ΣΚΟΥΠΙΔΙΑ ΣΚΟΥΠΙΔΙΑ' (3,+1) center
 end-if
 end-if
 end-if
 end-if
 end-if
 end-if

 let $msg='ΠΕΡΙΟΔΟΥ '||$apohmpr||' - '||$evshmpr
 print $msg (4,+1) center

   print ' '                                  (6,1,15)
   print ' '                                  (,+1,50)
   print '---Προοδευτικά Αθροίσματα---'       (,+2,28)
   print ' '                                  (,+2,14)
    print '------Κίνηση Περιόδου-------'      (,+2,28)
   print '----Συνολικά  Αθροίσματα----'       (,+2,28)
   print '-------Τελικά Υπόλοιπα------'       (,+2,28)

   print 'Λογαριασμός'                        (7,1,13)
   print ' '        			      (,+0,3)
   print 'Περιγραφή Λογαριασμού'              (,+0,50)
   
   print '       Χρέωση   -    Πίστωση'       (,+2,28)
   print '      Υπόλοιπα'       	      (,+1,14)
   print '       Χρέωση   -    Πίστωση'       (,+2,28)
   print '       Χρέωση   -    Πίστωση'       (,+2,28)
   print '       Χρέωση   -    Πίστωση'       (,+2,28)

End-Heading

!<pcalib help>
!
! 17cpi
!
! Στην παράμετρο [Ισοζύγιο] θα πρέπει να δοθεί ένας από τους παρακάτω κωδικούς :
! Ισοζύγιο (1) Γενικό, (2) Απογραφής έναρξης, (3) Ισολογιμου τακτοποιήσεις, (4) λήξεως
!
! 1. Για το : ΙΣΟΖΥΓΙΟ ΕΓΓΡΑΦΩΝ ΙΣΟΛΟΓΙΣΜΟΥ ΕΝΑΡΞΗΣ Γ.Λ.
!    περιέχει τις εγγραφές στη λογιστική με κωδικό ισοζυγίου : 3 (εγγραφών ισολογισμού)
!    τόσο στη περιόδο ή / και στα προδευτικά, ανάλογα με την περίοδο. 
!    Περιέχει μόνο εγγραφές έναρξης (Κωδικοί κίνησης Λογιστικής : 4)
!
! 1. Για το : ΙΣΟΖΥΓΙΟ ΕΓΓΡΑΦΩΝ ΙΣΟΛΟΓΙΣΜΟΥ ΕΝΑΡΞΗΣ Γ.Λ.
!    περιέχει τις εγγραφές στη λογιστική με κωδικό ισοζυγίου : 3 (εγγραφών ισολογισμού)
!    τόσο στη περιόδο ή / και στα προδευτικά, ανάλογα με την περίοδο. 
!    Περιέχει μόνο εγγραφές έναρξης (Κωδικοί κίνησης Λογιστικής : 4)
!
! 2. Για το : ΙΣΟΖΥΓΙΟ ΕΓΓΡΑΦΩΝ ΙΣΟΛΟΓΙΣΜΟΥ ΕΝΑΡΞΗΣ/ΛΗΞΗΣ Γ.Λ.
!    περιέχει τις εγγραφές στη λογιστική με κωδικό ισοζυγίου : 3 (εγγραφών ισολογισμού)
!    τόσο στα σύνολα περιόδου
!    και
!    όλες τις εγγραφές στα προδευτικά.
!
! 3. Για το : ΙΣΟΖΥΓΙΟ ΛΟΓΑΡΙΑΣΜΩΝ ΓΕΝΙΚΗΣ ΛΟΓΙΣΤΙΚΗΣ (ΓΕΝΙΚΟ)
!    περιέχει όλες τις εγγραφές στη λογιστική 
!    τόσο στα σύνολα περιόδου, όσο και στα προδευτικά.
!
!</pcalib help>

!<pcalib>
!Warning DO NOT modify this lines, are used internaly from PCA*LIBs
!	REP{GL	3	1	6036	isgaka	rs	X	01},TITLE{Ισοζύγιο γενικού, αναλυτικού καθολικού}
!	PARCOUNT{4}
!	PAR1{Ισοζύγιο	DUMP1	1	=	int		X}
!	PAR2{Ημερομηνία	DUMP2	2	ΑΠΟ-ΕΩΣ	datetime		X}
!	PAR3{Βαθμός Λογαριασμών	DUMP3	2	ΑΠΟ-ΕΩΣ	int		X}
!	PAR4{Λογαριασμός	a.logar	2	BETWEEN	varchar(25)	X	}
!REPORTHELP{T},RNHELP{Επιλογές ισοζυγίου 1,2,3,4 (πάτα βοήθεια για περσ. πληρ.)},RNVER{1.0},RNCREDT{2001-03-08},RNMODDT{2001-03-08},
!</pcalib>



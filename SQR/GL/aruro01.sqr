!***********************************************************************
!***** REPORT      : aruro01.sqr                                    ****
!***** DATE        : 26/03/98                                       ****
!***** APPLICATION : ΓΕΝΙΚΗ ΛΟΓΙΣΤΙΚΗ                               ****
!***** NOTE        : --- ΕΚΤΥΠΩΣΗ ΑΡΘΡΟΥ ---      		    ****
!***********************************************************************

#DEFINE   PAGE-Y                65
#DEFINE   PAGE-X                100
#DEFINE   HEAD-SIZE              6
#DEFINE   FOOT-SIZE              1
#DEFINE   HEAD-LINE              4

#DEFINE   DATEMASK        DD/MM/YY
#DEFINE   SHORTDATE          DD/MM
#DEFINE   MASK1      999999990.00c

Begin-Setup
 ASK    $L_GDATA   'GDATA '
 #INCLUDE "{$L_GDATA}/sqr/SETUP01.inc"
End-Setup

Begin-Report
 #INCLUDE "{$L_GDATA}/sqr/REPORT01.inc"
 move $L_CID to $cid

 input $parkvd  'Κωδικός Παραστατικού : '
 input $seira  'Σειρά : '
 input $parno  'Αριθμός : '
 input $perigrafh 'Περιγραφή : '

 unstring $parkvd    by '"' into $filler $parkvd    $filler
 unstring $seira     by '"' into $filler $seira     $filler
 unstring $perigrafh by '"' into $filler $perigrafh $filler
 execute app_floatcnv  $parno, #parno output

 execute glp_mkparid 'SQR',$parkvd,$seira,#parno,'',$parid output,$aitia output
 execute glp_arurofromparid 'SQR',$cid,$parid,0,$aruro output,$aruro_hmer output
 do findxrhsh($cid,$aruro_hmer,#xrhsh)


 display $parid
 display $aitia
 display 'A:' NOLINE
 display $aruro
 display 'H:' NOLINE
 display $aruro_hmer

 if $aruro='' 
    do error_notfound
 else
    do main
 end-if

End-Report


! *************************************************************************
! *** Syntax : 
begin-procedure findxrhsh($cid,$hmer,:#xrhsh)

move 0 to #xrhsh

begin-select
xrhsh           () NOP
  move &xrhsh to #xrhsh
from ap_xrhsh
 where cid = $cid
   and $hmer between xrhsh_arxh and xrhsh_telos
end-select

end-procedure


! ****************************************************************************

begin-procedure error_notfound
	next-listing
	print '**** TΟ ΑΡΘΡΟ ΔΕΝ ΥΠΑΡΧΕΙ ****' () center
	next-listing
end-procedure

! ****************************************************************************

begin-procedure main
move 0 to #ln
move 0 to #tot_xrevsh
move 0 to #tot_pistvsh
begin-select -C1
a.logar			() NOP
      do makelogform($cid, #xrhsh, &a.logar , $logarpr)
      print $logarpr    (, 1,12)
b.perigrafh 		(,+1,25) 
a.aitia                 (,+1,30)
a.xrevsh                (,+1,12) edit {MASK1}
a.pistvsh               (,+1,12) edit {MASK1}
	
	add &a.xrevsh  to #tot_xrevsh
	add &a.pistvsh to #tot_pistvsh

	next-listing
	add 1 to #ln
 	if #ln > 52
	   do changepage
	   move 0 to #ln
        end-if

from  gl_kin a,gl_logar b
where a.cid=$cid
and   b.cid=$cid
and   b.xrhsh = #xrhsh
and   a.cid=b.cid
and   a.logar=b.logar
and   a.aruro=$aruro
and   a.hmer_e=$aruro_hmer
and   a.orig_aa is null
[$SQLCMD]
order by a.aa
end-select

 do printgentotals

end-procedure

! ****************************************************************************

begin-procedure changepage
	next-listing
	print 'ΣΕ ΜΕΤΑΦΟΡΑ : '  (,40,30)
	do printtotals
	new-page
	print 'ΑΠΟ ΜΕΤΑΦΟΡΑ : ' (,40,30)
	do printtotals
	next-listing
end-procedure

begin-procedure printtotals
	print #tot_xrevsh       (,+1,12) edit {MASK1}
	print #tot_pistvsh      (,+1,12) edit {MASK1}
end-procedure


begin-procedure printgentotals
	next-listing
	print 'ΓΕΝΙΚΟ ΣΥΝΟΛΟ ΕΓΓΡΑΦΗΣ : '  (,40,30)
	do printtotals
end-procedure


! ****************************************************************************

begin-procedure makelogform($cid, #xrhsh, $inlogar, :$outlogar)

  execute -C2 glp_logfrm @cid       = $cid, 
                         @xrhsh     = #xrhsh, 
                         @in_logar  = $inlogar, 
                         @out_logar = $outlogar output

end-procedure

! ****************************************************************************


Begin-Footing {FOOT-SIZE}
 #INCLUDE "{$L_GDATA}/sqr/FOOT01.inc"
End-Footing

Begin-Heading {HEAD-SIZE}
 #INCLUDE "{$L_GDATA}/sqr/HEAD04.inc"

 move $aruro_hmer to $msg {DATEMASK}
 let $msg=$parid||' ΤΗΣ '||$msg
 print $perigrafh (2,01) center
 print $msg       (3,01) center

 print 'Λογαριασμός'                      (5, 1,12)
 print ' '                                ( ,+1,25)
 print 'Αιτιολογία'                       ( ,+1,30)
 print '      Χρέωση'      	          ( ,+1,12)  
 print '     Πίστωση'      	          ( ,+1,12)  

End-Heading
!<pcalib help>
!Παραστατικό εγγραφής στη γενική λογιστική
!Στο πεδίο [Περιγραφή Κατάστασης] πληκτρολογίστε τον τίτλο που
!θα πρέπει να έχει η εγγραφή
!</pcalib help>

!<pcalib>
!Warning DO NOT modify this lines, are used internaly from PCA*LIBs
!	REP{GL	1	8	113	aruro01	rs	X	01},TITLE{Παραστατικό εγγραφής}
!	PARCOUNT{4}
!	PAR1{Κωδικός Παραστατικού	DUMP1	1	=/ΕΠΙΛΟΓΗ	char(3)		X}
!	PAR2{Σειρά	DUMP2	1	=/ΕΠΙΛΟΓΗ	char(3)		X}
!	PAR3{Αριθμός	DUMP3	1	=/ΕΠΙΛΟΓΗ	int		X}
!	PAR4{Περιγραφη Κατάστασης	DUMP4	1	=/ΕΠΙΛΟΓΗ	varchar(80)		X}
!REPORTHELP{T},RNHELP{Εκτύπωση ενός άρθρου βάσει του παραστατικού},RNDESC{Εκτύπωση ενός άρθρου βάσει του παραστατικού},RNVER{1},RNCREDT{1998-03-26},RNMODDT{1998-03-26},
!</pcalib>

! *************************************************************************
! ***** PROLOGIC S.A.                                                  ****
! ***** REPORT      : whisoz.sqr                                       ****
! ***** DATE        : 02/08/94                                         ****
! ***** APPLICATION : Application environment                          ****
! ***** AUTHOR      : ΑΦΕΝΤΑΚΗΣ ΑΝΔΡΕΑΣ                                ****
! ***** NOTE        : Εκτύπωση μηνιαίου Iσοζ.κατα Αποθηκη (θεωρημενο)  ****
! *************************************************************************

#DEFINE   PAGE-Y               62
#DEFINE   PAGE-X              132
#DEFINE   HEAD-SIZE             7
#DEFINE   FOOT-SIZE             1
#DEFINE   HEAD-LINE             4

#DEFINE   DATEMASK       DD/MM/YY
#DEFINE   MASK4              9999
#DEFINE   MASKQ        99,999,999.999
#DEFINE   MASKA    99,999,999,999
#DEFINE   MASKK        99,999,999.999

Begin-Setup
 ASK    $L_GDATA   'GDATA '
 #INCLUDE "{$L_GDATA}/sqr/SETUP01.inc"
End-Setup

Begin-Report
 #INCLUDE "{$L_GDATA}/sqr/REPORT01.inc"

 move $L_CID  to $cid
 
 input $iapou1 'apouhkh apo'
 input $iapou2 'apouhkh evs'

 unstring $iapou1 by '"' into $filler $apou1 $filler
 unstring $iapou2 by '"' into $filler $apou2 $filler

 input $ihm_apo  'apo hmeromhnia '
 input $ihm_evs  'evs hmeromhnia '

 execute app_datecnv    $ihm_apo, $apohm output, $apohmpr output
 execute app_datecnv    $ihm_evs, $evshm output, $evshmpr output

 do main

End-Report

! *************************************************************************

begin-procedure main

  do clear_var

begin-select 
a.apouhkh                                       () NOP
   print &a.apouhkh                             ()
            On-Break print = Change/Top-Page
		  Save     = $apouhkh
		  Level    = 1
		  Before   = find_apouhkh
                  After    = synola_apouhkhs
a.eidos                                         () NOP
   print &a.eidos                               ()
            On-Break print = Never
		  Save     = $eidos
		  Level    = 2
                  After    = print_eidos
a.pvl_p &pvl_qt                                () NOP
a.pvl_a &pvl_aj                                () NOP
a.ago_p &ag_qt                                 () NOP
a.ago_a &ag_aj                                 () NOP
a.dia_p &dk_qt                                 () NOP
a.apo_p &ap_qt                                 () NOP
a.apo_a &ap_aj                                 () NOP
a.gen_p &ge_qt                                 () NOP

  let #pvl_qt = #pvl_qt + &pvl_qt
  let #pvl_aj = #pvl_aj + &pvl_aj
  let #ag_qt  = #ag_qt  + &ag_qt
  let #ag_aj  = #ag_aj  + &ag_aj
  let #dk_qt  = #dk_qt  + &dk_qt 
  let #ap_qt  = #ap_qt  + &ap_qt
  let #ap_aj  = #ap_aj  + &ap_aj
  let #ge_qt  = #ge_qt  + &ge_qt

from wh_kint1 a
where     a.cid          = $cid				
and       a.hmeromhnia   between $apohm and $evshm
and       a.apouhkh      between $apou1 and $apou2
[$SQLCMD]
order by a.apouhkh, a.eidos
end-select

    do print_synola

end-procedure

! ******************************************************************

begin-procedure find_apouhkh

  if $apouhkh = ''
     move &a.apouhkh to $apouhkh
  end-if

begin-select
b.perigrafh                 () NOP

   move &b.perigrafh to $per_apouhkh

from wh_apouhk b
where b.kvdikos = $apouhkh
end-select

end-procedure

! ******************************************************************

begin-procedure print_eidos

  move $eidos to $eidos
  move '' to $perigrafh

begin-select
perigrafh                                      () NOP

    move &perigrafh to $perigrafh

from wh_eidh
where kvdikos = $eidos
end-select

  ! Υπολογισμος μεσου σταθμικου Κοστους

  execute whp_getmsk @cid=$cid, @eidos=$eidos, @hmer=$evshm, @msk=#msk output  

  let  #diak_p  = #dk_qt  + #ge_qt
  let  #diak_k  = #diak_p * #msk 
  let  #pvl_k   = #pvl_qt * #msk
  let  #mik_ker = #pvl_aj - #pvl_k
  let  #ypol_qt = #ap_qt + #ag_qt - #pvl_qt + #dk_qt + #ge_qt
  let  #ypol_k  = #ypol_qt * #msk 

  print $eidos                                  (, 01,15)
  print ' '                                     (,+01,10)

  print #msk                                    (,+01,14) edit {MASKK}
  print #ap_qt                                  (,+01,14) edit {MASKQ}
  print #ag_qt       		                (,+01,14) edit {MASKQ}
  print #diak_p                                 (,+01,14) edit {MASKQ}
  print #pvl_qt                                 (,+01,14) edit {MASKQ}
  print #pvl_k                                  (,+01,14) edit {MASKA}
  print #ypol_qt                                (,+01,14) edit {MASKQ}
  next-listing

  print $perigrafh                              (,  1,40)
  print #ap_aj                                  (, 43,14) edit {MASKA}
  print #ag_aj       		                (,+01,14) edit {MASKA}
  print #diak_k                                 (,+01,14) edit {MASKA}
  print #pvl_aj                                 (,+01,14) edit {MASKA}
  print #mik_ker                                (,+01,14) edit {MASKA}
  print #ypol_k                                 (,+01,14) edit {MASKA}
  next-listing

  print '-'                                     (, 01,132) Fill
  next-listing

  do add_totals 

end-procedure

! ******************************************************************

begin-procedure add_totals

  let #tot_ap_qt   = #tot_ap_qt  + #ap_qt
  let #tot_ag_qt   = #tot_ag_qt  + #ag_qt
  let #tot_diak_p  = #tot_diak_p + #diak_p
  let #tot_pvl_qt  = #tot_pvl_qt + #pvl_qt
  let #tot_pvl_k   = #tot_pvl_k  + #pvl_k 
  let #tot_ypol_qt = #tot_ypol_qt+ #ypol_qt

  let #tot_ap_aj   = #tot_ap_aj  + #ap_aj
  let #tot_ag_aj   = #tot_ag_aj  + #ag_aj
  let #tot_diak_k  = #tot_diak_k + #diak_k
  let #tot_pvl_aj  = #tot_pvl_aj + #pvl_aj
  let #tot_mik_ker = #tot_mik_ker+ #mik_ker
  let #tot_ypol_aj = #tot_ypol_aj+ #ypol_k

  do clear_var

end-procedure

! ******************************************************************

begin-procedure clear_var

  move 0 to #pvl_qt
  move 0 to #pvl_aj
  move 0 to #ag_qt 
  move 0 to #ag_aj 
  move 0 to #dk_qt 
  move 0 to #ap_qt 
  move 0 to #ap_aj 
  move 0 to #ge_qt 

end-procedure

! ******************************************************************

begin-procedure synola_apouhkhs

  let $msg = 'Σύνολα Αποθήκης ['||$apouhkh||']'
  print $msg                         ( ,20,27)
  print #tot_ap_qt                   (, 43,14) edit {MASKQ}
  print #tot_ag_qt       	     (,+01,14) edit {MASKQ}
  print #tot_diak_p                  (,+01,14) edit {MASKQ}
  print #tot_pvl_qt                  (,+01,14) edit {MASKQ}
  print #tot_pvl_k                   (,+01,14) edit {MASKA}
  print #tot_ypol_qt                 (,+01,14) edit {MASKQ}
  next-listing

  print #tot_ap_aj                   (, 43,14) edit {MASKA}
  print #tot_ag_aj            	     (,+01,14) edit {MASKA}
  print #tot_diak_k                  (,+01,14) edit {MASKA}
  print #tot_pvl_aj                  (,+01,14) edit {MASKA}
  print #tot_mik_ker                 (,+01,14) edit {MASKA}
  print #tot_ypol_aj                 (,+01,14) edit {MASKA}
  next-listing
  
  do addgen_totals

  move 0 to #tot_ap_qt
  move 0 to #tot_ag_qt
  move 0 to #tot_diak_p
  move 0 to #tot_pvl_qt
  move 0 to #tot_pvl_k
  move 0 to #tot_ypol_qt
  move 0 to #tot_ap_aj
  move 0 to #tot_ag_aj
  move 0 to #tot_diak_k
  move 0 to #tot_pvl_aj
  move 0 to #tot_mik_ker
  move 0 to #tot_ypol_aj

  new-page

end-procedure

! ******************************************************************

begin-procedure addgen_totals

  let #gtot_ap_qt   = #gtot_ap_qt  + #tot_ap_qt
  let #gtot_ag_qt   = #gtot_ag_qt  + #tot_ag_qt
  let #gtot_diak_p  = #gtot_diak_p + #tot_diak_p
  let #gtot_pvl_qt  = #gtot_pvl_qt + #tot_pvl_qt
  let #gtot_pvl_k   = #gtot_pvl_k  + #tot_pvl_k 
  let #gtot_ypol_qt = #gtot_ypol_qt+ #tot_ypol_qt

  let #gtot_ap_aj   = #gtot_ap_aj  + #tot_ap_aj
  let #gtot_ag_aj   = #gtot_ag_aj  + #tot_ag_aj
  let #gtot_diak_k  = #gtot_diak_k + #tot_diak_k
  let #gtot_pvl_aj  = #gtot_pvl_aj + #tot_pvl_aj
  let #gtot_mik_ker = #gtot_mik_ker+ #tot_mik_ker
  let #gtot_ypol_aj = #gtot_ypol_aj+ #tot_ypol_aj

end-procedure

! ******************************************************************

begin-procedure print_synola

  next-listing
  let $msg = 'Γ Ε Ν Ι Κ Α   Σ Υ Ν Ο Λ Α'          
  print $msg                          ( ,10,32)
  print #gtot_ap_qt                   (, 43,14) edit {MASKQ}
  print #gtot_ag_qt       	      (,+01,14) edit {MASKQ}
  print #gtot_diak_p                  (,+01,14) edit {MASKQ}
  print #gtot_pvl_qt                  (,+01,14) edit {MASKQ}
  print #gtot_pvl_k                   (,+01,14) edit {MASKA}
  print #gtot_ypol_qt                 (,+01,14) edit {MASKQ}
  next-listing

  print #gtot_ap_aj                   (, 43,14) edit {MASKA}
  print #gtot_ag_aj            	      (,+01,14) edit {MASKA}
  print #gtot_diak_k                  (,+01,14) edit {MASKA}
  print #gtot_pvl_aj                  (,+01,14) edit {MASKA}
  print #gtot_mik_ker          	      (,+01,14) edit {MASKA}
  print #gtot_ypol_aj                 (,+01,14) edit {MASKA}

end-procedure

! ******************************************************************

begin-footing {FOOT-SIZE}
#INCLUDE "{$L_GDATA}/sqr/FOOT01.inc"
end-footing

begin-heading {HEAD-SIZE}
  #INCLUDE "{$L_GDATA}/sqr/HEAD01.inc"
  let $epk1=$per_apouhkh||' ['||$apouhkh||']'
  let $epk2='Aπο '||$apohmpr||' εως '||$evshmpr
  print 'Ισοζυγιο Ειδών Κατά Αποθήκη' (2,01,30) Center
  print  $epk1                        (3,01,40)
  print  $epk2                        (3,01,30) Center
  print 'Ε μ π ο ρ ε υ μ α τ α'       (5,01,30)
  print 'Mέσο'                        (,+01,10)
  print '      Απογραφή'              (,+01,14)
  print '        Αγορές'              (,+01,14)
  print '     Διακίνηση'              (,+01,14)
  print '      Πωλήσεις'              (,+01,14)
  print 'Kόστος Πώλησης'              (,+01,14)
  print '      Υπόλοιπα'              (,+01,14)

  print 'Κωδ.'                        (6,01,04)
  print 'Π ε ρ ι γ ρ α φ ή'           (,+01,25)
  print 'Σταθμ.Κοστ'                  (,+01,10)
  print ' Ποσότητα/Κόστ'              (,+01,14)
  print ' Ποσότητα/Κόστ'              (,+01,14)
  print ' Ποσότητα/Κόστ'              (,+01,14)
  print ' Ποσότητα/Αξία'              (,+01,14)
  print '   Μικτό Κέρδ.'              (,+01,14)
  print ' Ποσότητα/Κόστ'              (,+01,14)
end-heading
